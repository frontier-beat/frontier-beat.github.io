{"version":3,"sources":["assets/light-logo.png","assets/dark-logo.png","App.js","reportWebVitals.js","index.js"],"names":["module","exports","renderMath","text","split","map","part","index","startsWith","endsWith","React","createElement","BlockMath","key","slice","InlineMath","replace","applyTheme","isDark","document","body","classList","toggle","RepoCard","_ref","repo","formattedRate","hourly_rate","toFixed","showRate","components","p","_ref2","children","Children","child","code","_ref3","node","inline","className","props","match","exec","Object","assign","href","html_link","target","rel","title","paper_summary","ReactMarkdown","FaCode","html_url","full_name","FaStar","star_count","concat","LogoCard","_ref4","isDarkMode","onClick","window","location","reload","src","darkLogo","lightLogo","alt","App","repos","setRepos","useState","page","setPage","hasMore","setHasMore","setIsDarkMode","localStorage","getItem","initialFetchDone","useRef","useEffect","current","fetchRepos","setItem","async","newRepos","axios","get","pageNum","data","prevRepos","length","error","console","toggleTheme","prevMode","FaSun","FaMoon","InfiniteScroll","dataLength","next","loader","endMessage","style","textAlign","Fragment","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d361d622.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/light-logo.06063403.png\";","module.exports = __webpack_public_path__ + \"static/media/dark-logo.3beb300b.png\";","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport ReactMarkdown from 'react-markdown';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport { FaStar, FaCode, FaMoon, FaSun } from 'react-icons/fa';\nimport 'katex/dist/katex.min.css';\nimport './App.css';\nimport lightLogo from './assets/light-logo.png';\nimport darkLogo from './assets/dark-logo.png';\n\nconst renderMath = (text) => {\n  if (typeof text !== 'string') {\n    return text;\n  }\n  \n  // Split the text into LaTeX and non-LaTeX parts\n  const parts = text.split(/(\\$\\$[\\s\\S]*?\\$\\$|\\$[\\s\\S]*?\\$)/);\n  \n  return parts.map((part, index) => {\n    if (part.startsWith('$$') && part.endsWith('$$')) {\n      return <BlockMath key={index}>{part.slice(2, -2)}</BlockMath>;\n    } else if (part.startsWith('$') && part.endsWith('$')) {\n      return <InlineMath key={index}>{part.slice(1, -1)}</InlineMath>;\n    } else {\n      // Handle escaped backslashes and underscores\n      const processedText = part\n        .replace(/\\\\\\\\/g, '\\\\')\n        .replace(/\\\\_/g, '_');\n      return processedText;\n    }\n  });\n};\n\nconst renderTitle = (text) => {\n  return renderMath(text);\n};\n\nconst applyTheme = (isDark) => {\n  document.body.classList.toggle('dark-mode', isDark);\n  document.body.classList.toggle('light-mode', !isDark);\n};\n\nconst RepoCard = ({ repo }) => {\n  const formattedRate = repo.hourly_rate.toFixed(2);\n  const showRate = formattedRate !== '0.00';\n\n  const components = {\n    p: ({ children }) => <p>{React.Children.map(children, child => \n      typeof child === 'string' ? renderMath(child) : child\n    )}</p>,\n    // ... other heading components\n    code: ({ node, inline, className, children, ...props }) => {\n      const match = /language-(\\w+)/.exec(className || '')\n      return !inline && match ? (\n        <pre className={className} {...props}>\n          <code className={className}>{children}</code>\n        </pre>\n      ) : (\n        <code className={className} {...props}>\n          {children}\n        </code>\n      )\n    },\n  };\n\n  const processContent = (content) => {\n    // Handle block-level equations\n    const blockEquationRegex = /\\$\\$([\\s\\S]*?)\\$\\$/g;\n    const parts = content.split(blockEquationRegex);\n    \n    return parts.map((part, index) => {\n      if (index % 2 === 1) {\n        // This is a block-level equation\n        return <BlockMath key={index}>{part}</BlockMath>;\n      } else {\n        // This is regular text or inline math\n        return <ReactMarkdown key={index} components={components}>{part}</ReactMarkdown>;\n      }\n    });\n  };\n\n  return (\n    <div className=\"repo-card\">\n      <h2>\n        <a href={repo.html_link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {renderMath(repo.title)}\n        </a>\n      </h2>\n      <div className=\"paper-summary\">\n        {processContent(repo.paper_summary)}\n      </div>\n      <div className=\"repo-stats\">\n        <FaCode />\n        <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {repo.full_name}\n        </a>\n      </div>\n      <div className=\"repo-stats\">\n        <FaStar />\n        {repo.star_count}\n        {showRate && ` (+${formattedRate}/hour)`}\n      </div>\n    </div>\n  );\n};\n\nconst LogoCard = ({ isDarkMode }) => (\n  <div className=\"logo-card\" onClick={() => window.location.reload()}>\n    <img src={isDarkMode ? darkLogo : lightLogo} alt=\"Frontier Beat Logo\" className=\"App-logo\" />\n  </div>\n);\n\nfunction App() {\n  const [repos, setRepos] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n  const savedTheme = localStorage.getItem('theme');\n    return savedTheme === 'dark';\n  });\n  const initialFetchDone = useRef(false);\n\n  useEffect(() => {\n    applyTheme(isDarkMode);\n    if (!initialFetchDone.current) {\n      fetchRepos(1); // Fetch first page when component mounts\n      initialFetchDone.current = true;\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    applyTheme(isDarkMode);\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n\n  const fetchRepos = async (pageNum) => {\n    try {\n      const response = await axios.get(`https://138.197.78.218/top_papers?page=${pageNum}&per_page=10`);\n      const newRepos = response.data.repos;\n      setRepos((prevRepos) => [...prevRepos, ...newRepos]);\n      setPage(pageNum + 1);\n      if (newRepos.length < 10) {\n        setHasMore(false);\n      }\n    } catch (error) {\n      console.error('Error fetching repos:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"theme-toggle\" onClick={toggleTheme}>\n        {isDarkMode ? <FaSun /> : <FaMoon />}\n      </div>\n        <InfiniteScroll\n          dataLength={repos.length}\n          next={() => fetchRepos(page)}\n          hasMore={hasMore}\n          loader={<div className=\"loading\">Loading...</div>}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>You have seen all the top repositories!</b>\n            </p>\n          }\n        >\n        {repos.map((repo, index) => (\n          <React.Fragment key={repo.id}>\n            {index === 0 && <LogoCard isDarkMode={isDarkMode} />}\n            <RepoCard repo={repo} />\n          </React.Fragment>\n        ))}\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}